# https://medium.com/estia-training/the-journey-to-building-a-full-microservice-app-docker-compose-and-connection-with-mongodb-cd6cdd26b11c
# docker-compose up --build -d
# docker-compose down

version: "3.2"

services:
  server:
    container_name: authentication-server
    build: .
    command: yarn run dev
    ports:
      - 8081:8081
    volumes:
      - ./server:/authentication-server
    depends_on:
      - mongo-database
    environment:
      - NODE_ENV=development
    networks:
      - authentication-service-network

  mongo-database:
    image: mongo
    container_name: authentication-mongo-database
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: admin
    ports:
      - 27017:27017
    volumes:
      - ./db:/data/db
    networks:
      - authentication-service-network

  # https://medium.com/@renato.groffe/mongodb-mongo-express-docker-compose-montando-rapidamente-um-ambiente-para-uso-824f25ca6957
  # Securing mongo-express: https://www.helpnetsecurity.com/2019/04/26/securing-mongo-express-web-administrative-interfaces/
  mongo-express:
    image: mongo-express
    container_name: authentication-mongo-express
    # restart: always
    # links:
    #   - mongodb-product
    # volumes:
    #   - 'mongo_express_product:/data'
    ports:
      - 8090:8090
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo-database
      # ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 34251555
      VCAP_APP_PORT: 8090
      ME_CONFIG_OPTIONS_EDITORTHEME: cobalt
    links:
      - mongo-database
    depends_on:
      - mongo-database
    networks:
      - authentication-service-network

networks:
  authentication-service-network:
    driver: bridge
